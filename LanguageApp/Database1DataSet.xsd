<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet" targetNamespace="http://tempuri.org/Database1DataSet.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet.xsd" xmlns="http://tempuri.org/Database1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LanguageApp.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LessonTableTableAdapter" GeneratorDataComponentClassName="LessonTableTableAdapter" Name="LessonTable" UserDataComponentName="LessonTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.LessonTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LessonTable] WHERE (([LessonID] = @Original_LessonID) AND ((@IsNull_LessonText = 1 AND [LessonText] IS NULL) OR ([LessonText] = @Original_LessonText)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LessonText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LessonText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LessonTable] ([LessonID], [LessonText]) VALUES (@LessonID, @LessonText);
SELECT LessonID, LessonText FROM LessonTable WHERE (LessonID = @LessonID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LessonText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LessonID, LessonText FROM dbo.LessonTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LessonTable] SET [LessonID] = @LessonID, [LessonText] = @LessonText WHERE (([LessonID] = @Original_LessonID) AND ((@IsNull_LessonText = 1 AND [LessonText] IS NULL) OR ([LessonText] = @Original_LessonText)));
SELECT LessonID, LessonText FROM LessonTable WHERE (LessonID = @LessonID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LessonText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LessonText" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LessonText" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LessonText" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LessonID" DataSetColumn="LessonID" />
              <Mapping SourceColumn="LessonText" DataSetColumn="LessonText" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QuestionsTableTableAdapter" GeneratorDataComponentClassName="QuestionsTableTableAdapter" Name="QuestionsTable" UserDataComponentName="QuestionsTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.QuestionsTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[QuestionsTable] WHERE (([QuestionsID] = @Original_QuestionsID) AND ([LessonID] = @Original_LessonID) AND ([question] = @Original_question) AND ([answer] = @Original_answer) AND ([type] = @Original_type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_question" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_answer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[QuestionsTable] ([QuestionsID], [LessonID], [question], [answer], [type]) VALUES (@QuestionsID, @LessonID, @question, @answer, @type);
SELECT QuestionsID, LessonID, question, answer, type FROM QuestionsTable WHERE (QuestionsID = @QuestionsID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionsID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@question" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@answer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT QuestionsID, LessonID, question, answer, type FROM dbo.QuestionsTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[QuestionsTable] SET [QuestionsID] = @QuestionsID, [LessonID] = @LessonID, [question] = @question, [answer] = @answer, [type] = @type WHERE (([QuestionsID] = @Original_QuestionsID) AND ([LessonID] = @Original_LessonID) AND ([question] = @Original_question) AND ([answer] = @Original_answer) AND ([type] = @Original_type));
SELECT QuestionsID, LessonID, question, answer, type FROM QuestionsTable WHERE (QuestionsID = @QuestionsID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuestionsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionsID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@question" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@answer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuestionsID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuestionsID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_question" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="question" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_answer" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="answer" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_type" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="QuestionsID" DataSetColumn="QuestionsID" />
              <Mapping SourceColumn="LessonID" DataSetColumn="LessonID" />
              <Mapping SourceColumn="question" DataSetColumn="question" />
              <Mapping SourceColumn="answer" DataSetColumn="answer" />
              <Mapping SourceColumn="type" DataSetColumn="type" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestTableTableAdapter" GeneratorDataComponentClassName="TestTableTableAdapter" Name="TestTable" UserDataComponentName="TestTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.TestTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TestTable] WHERE (([TestID] = @Original_TestID) AND ([LessonID] = @Original_LessonID) AND ([UserID] = @Original_UserID) AND ([score] = @Original_score))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TestTable] ([TestID], [LessonID], [UserID], [score]) VALUES (@TestID, @LessonID, @UserID, @score);
SELECT TestID, LessonID, UserID, score FROM TestTable WHERE (TestID = @TestID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TestID, LessonID, UserID, score FROM dbo.TestTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TestTable] SET [TestID] = @TestID, [LessonID] = @LessonID, [UserID] = @UserID, [score] = @score WHERE (([TestID] = @Original_TestID) AND ([LessonID] = @Original_LessonID) AND ([UserID] = @Original_UserID) AND ([score] = @Original_score));
SELECT TestID, LessonID, UserID, score FROM TestTable WHERE (TestID = @TestID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LessonID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LessonID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_score" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="score" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TestID" DataSetColumn="TestID" />
              <Mapping SourceColumn="LessonID" DataSetColumn="LessonID" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="score" DataSetColumn="score" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableTableAdapter" GeneratorDataComponentClassName="UsersTableTableAdapter" Name="UsersTable" UserDataComponentName="UsersTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.UsersTable" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UsersTable] WHERE (([UserID] = @Original_UserID) AND ([username] = @Original_username) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UsersTable] ([UserID], [username], [password]) VALUES (@UserID, @username, @password);
SELECT UserID, username, password FROM UsersTable WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, username, password FROM dbo.UsersTable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UsersTable] SET [UserID] = @UserID, [username] = @username, [password] = @password WHERE (([UserID] = @Original_UserID) AND ([username] = @Original_username) AND ([password] = @Original_password));
SELECT UserID, username, password FROM UsersTable WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet" msprop:Generator_UserDSName="Database1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="LessonTable" msprop:Generator_TableClassName="LessonTableDataTable" msprop:Generator_TableVarName="tableLessonTable" msprop:Generator_TablePropName="LessonTable" msprop:Generator_RowDeletingName="LessonTableRowDeleting" msprop:Generator_RowChangingName="LessonTableRowChanging" msprop:Generator_RowEvHandlerName="LessonTableRowChangeEventHandler" msprop:Generator_RowDeletedName="LessonTableRowDeleted" msprop:Generator_UserTableName="LessonTable" msprop:Generator_RowChangedName="LessonTableRowChanged" msprop:Generator_RowEvArgName="LessonTableRowChangeEvent" msprop:Generator_RowClassName="LessonTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LessonID" msprop:Generator_ColumnVarNameInTable="columnLessonID" msprop:Generator_ColumnPropNameInRow="LessonID" msprop:Generator_ColumnPropNameInTable="LessonIDColumn" msprop:Generator_UserColumnName="LessonID" type="xs:int" />
              <xs:element name="LessonText" msprop:Generator_ColumnVarNameInTable="columnLessonText" msprop:Generator_ColumnPropNameInRow="LessonText" msprop:Generator_ColumnPropNameInTable="LessonTextColumn" msprop:Generator_UserColumnName="LessonText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="QuestionsTable" msprop:Generator_TableClassName="QuestionsTableDataTable" msprop:Generator_TableVarName="tableQuestionsTable" msprop:Generator_TablePropName="QuestionsTable" msprop:Generator_RowDeletingName="QuestionsTableRowDeleting" msprop:Generator_RowChangingName="QuestionsTableRowChanging" msprop:Generator_RowEvHandlerName="QuestionsTableRowChangeEventHandler" msprop:Generator_RowDeletedName="QuestionsTableRowDeleted" msprop:Generator_UserTableName="QuestionsTable" msprop:Generator_RowChangedName="QuestionsTableRowChanged" msprop:Generator_RowEvArgName="QuestionsTableRowChangeEvent" msprop:Generator_RowClassName="QuestionsTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="QuestionsID" msprop:Generator_ColumnVarNameInTable="columnQuestionsID" msprop:Generator_ColumnPropNameInRow="QuestionsID" msprop:Generator_ColumnPropNameInTable="QuestionsIDColumn" msprop:Generator_UserColumnName="QuestionsID" type="xs:int" />
              <xs:element name="LessonID" msprop:Generator_ColumnVarNameInTable="columnLessonID" msprop:Generator_ColumnPropNameInRow="LessonID" msprop:Generator_ColumnPropNameInTable="LessonIDColumn" msprop:Generator_UserColumnName="LessonID" type="xs:int" />
              <xs:element name="question" msprop:Generator_ColumnVarNameInTable="columnquestion" msprop:Generator_ColumnPropNameInRow="question" msprop:Generator_ColumnPropNameInTable="questionColumn" msprop:Generator_UserColumnName="question">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="answer" msprop:Generator_ColumnVarNameInTable="columnanswer" msprop:Generator_ColumnPropNameInRow="answer" msprop:Generator_ColumnPropNameInTable="answerColumn" msprop:Generator_UserColumnName="answer">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="type" msprop:Generator_ColumnVarNameInTable="columntype" msprop:Generator_ColumnPropNameInRow="type" msprop:Generator_ColumnPropNameInTable="typeColumn" msprop:Generator_UserColumnName="type">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TestTable" msprop:Generator_TableClassName="TestTableDataTable" msprop:Generator_TableVarName="tableTestTable" msprop:Generator_TablePropName="TestTable" msprop:Generator_RowDeletingName="TestTableRowDeleting" msprop:Generator_RowChangingName="TestTableRowChanging" msprop:Generator_RowEvHandlerName="TestTableRowChangeEventHandler" msprop:Generator_RowDeletedName="TestTableRowDeleted" msprop:Generator_UserTableName="TestTable" msprop:Generator_RowChangedName="TestTableRowChanged" msprop:Generator_RowEvArgName="TestTableRowChangeEvent" msprop:Generator_RowClassName="TestTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TestID" msprop:Generator_ColumnVarNameInTable="columnTestID" msprop:Generator_ColumnPropNameInRow="TestID" msprop:Generator_ColumnPropNameInTable="TestIDColumn" msprop:Generator_UserColumnName="TestID" type="xs:int" />
              <xs:element name="LessonID" msprop:Generator_ColumnVarNameInTable="columnLessonID" msprop:Generator_ColumnPropNameInRow="LessonID" msprop:Generator_ColumnPropNameInTable="LessonIDColumn" msprop:Generator_UserColumnName="LessonID" type="xs:int" />
              <xs:element name="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="score" msprop:Generator_ColumnVarNameInTable="columnscore" msprop:Generator_ColumnPropNameInRow="score" msprop:Generator_ColumnPropNameInTable="scoreColumn" msprop:Generator_UserColumnName="score" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UsersTable" msprop:Generator_TableClassName="UsersTableDataTable" msprop:Generator_TableVarName="tableUsersTable" msprop:Generator_TablePropName="UsersTable" msprop:Generator_RowDeletingName="UsersTableRowDeleting" msprop:Generator_RowChangingName="UsersTableRowChanging" msprop:Generator_RowEvHandlerName="UsersTableRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersTableRowDeleted" msprop:Generator_UserTableName="UsersTable" msprop:Generator_RowChangedName="UsersTableRowChanged" msprop:Generator_RowEvArgName="UsersTableRowChangeEvent" msprop:Generator_RowClassName="UsersTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LessonTable" />
      <xs:field xpath="mstns:LessonID" />
    </xs:unique>
    <xs:unique name="QuestionsTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:QuestionsTable" />
      <xs:field xpath="mstns:QuestionsID" />
    </xs:unique>
    <xs:unique name="TestTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TestTable" />
      <xs:field xpath="mstns:TestID" />
    </xs:unique>
    <xs:unique name="UsersTable_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UsersTable" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="LessonFKTwo" msdata:parent="LessonTable" msdata:child="QuestionsTable" msdata:parentkey="LessonID" msdata:childkey="LessonID" msprop:Generator_UserChildTable="QuestionsTable" msprop:Generator_ChildPropName="GetQuestionsTableRows" msprop:Generator_UserRelationName="LessonFKTwo" msprop:Generator_ParentPropName="LessonTableRow" msprop:Generator_RelationVarName="relationLessonFKTwo" msprop:Generator_UserParentTable="LessonTable" />
      <msdata:Relationship name="LessonFK" msdata:parent="LessonTable" msdata:child="TestTable" msdata:parentkey="LessonID" msdata:childkey="LessonID" msprop:Generator_UserChildTable="TestTable" msprop:Generator_ChildPropName="GetTestTableRows" msprop:Generator_UserRelationName="LessonFK" msprop:Generator_ParentPropName="LessonTableRow" msprop:Generator_RelationVarName="relationLessonFK" msprop:Generator_UserParentTable="LessonTable" />
      <msdata:Relationship name="UserFK" msdata:parent="UsersTable" msdata:child="TestTable" msdata:parentkey="UserID" msdata:childkey="UserID" msprop:Generator_UserChildTable="TestTable" msprop:Generator_ChildPropName="GetTestTableRows" msprop:Generator_UserRelationName="UserFK" msprop:Generator_RelationVarName="relationUserFK" msprop:Generator_UserParentTable="UsersTable" msprop:Generator_ParentPropName="UsersTableRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>